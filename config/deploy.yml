service: homelab-template

image: pandoks/homelab-template-web

servers:
  web:
    - 5.78.129.11

# NOTE: you need to add "service=<service>" label for images that you build remotely
# If using something like Cloudflare, it is recommended to set encryption mode
# in Cloudflare's SSL/TLS setting to "Full" to enable end-to-end encryption. Set ssl: false
proxy:
  ssl: true
  hosts:
    - ziji.dev
  app_port: 3000

registry:
  server: ghcr.io
  username: Pandoks

  password:
    - KAMAL_REGISTRY_PASSWORD

builder:
  arch: amd64

env:
  clear:
    MAIN_REDIS_PORT: 6379
    MAIN_REDIS_HOST: homelab-template-redis
    USER_DB_HOST: homelab-template-db
    USER_DB_PORT: 5432
  secret:
    - MAIN_REDIS_PASSWORD
    - USER_DB_PASSWORD
    - USER_DB_USERNAME
    - USER_DB_DATABASE

ssh:
  user: pandoks
  port: 61189

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# volumes:
#   - "app_storage:/app/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid hitting 404 on in-flight
# requests. Combines all files from new and old version inside the asset_path.
# NOTE: You should probably just use a CDN 99% of the time you're reaching for this
#
# asset_path: /app/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts. (for multiple hosts)
#
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

accessories:
  # Use VPNs when using different machines (don't need to setup tls)
  db:
    image: postgres:17-alpine
    port: "127.0.0.1:5432:5432" # don't expose to public (use vpn when multi machine)
    roles:
      - web
    env:
      secret:
        - POSTGRES_USER
        - POSTGRES_PASSWORD
        - POSTGRES_DB
        - PGUSER
        - PGDATABASE
    files:
      - packages/core/src/database/main/setup/_init.sql:/docker-entrypoint-initdb.d/init.sql
      - packages/core/src/database/main/setup/roles.sql:/docker-entrypoint-initdb.d/roles.sql
      - packages/core/src/database/images/master/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
    directories:
      - postgres-data:/var/lib/postgresql/data

  # Data will be lost when this shuts down (it's designed to be transient) don't try to persist data
  redis:
    image: redis:7-alpine
    port: "127.0.0.1:6379:6379"
    roles:
      - web
    env:
      secret:
        - REDIS_PASSWORD
    cmd: "/bin/sh -c 'redis-server --requirepass $REDIS_PASSWORD'"

  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "127.0.0.1:8080:8080"
