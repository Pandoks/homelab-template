# Name of your application. Used to uniquely configure containers.
service: homelab-template

# Name of the container image.
image: pandoks/homelab-template-web

# Deploy to these servers.
servers:
  web:
    - 5.78.129.11

# TODO: add read-only flag to docker containers
# NOTE: you need to add "service" label for images that you don't want to build
# Enable SSL auto certification via Let's Encrypt (and allow for multiple apps on one server).
# If using something like Cloudflare, it is recommended to set encryption mode
# in Cloudflare's SSL/TLS setting to "Full" to enable end-to-end encryption.
proxy:
  ssl: true
  hosts:
    - ziji.dev
    - www.ziji.dev
  # kamal-proxy connects to your container over port 80, use `app_port` to specify a different port.
  app_port: 3000

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  server: ghcr.io
  username: Pandoks

  # Always use an access token rather than real password (pulled from .kamal/secrets).
  password:
    - KAMAL_REGISTRY_PASSWORD
# Configure builder setup.
builder:
  arch: amd64
# Inject ENV variables into containers (secrets come from .kamal/secrets).
#
# env:
#   clear:
#     DB_HOST: 192.168.0.2
#   secret:
#     - RAILS_MASTER_KEY

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# Use a different ssh user than root
ssh:
  user: pandoks
  port: 61189
  # Use a persistent storage volume.
  #
  # volumes:
  #   - "app_storage:/app/storage"

  # Bridge fingerprinted assets, like JS and CSS, between versions to avoid
  # hitting 404 on in-flight requests. Combines all files from new and old
  # version inside the asset_path.
  #
  # asset_path: /app/public/assets

  # Configure rolling deploys by setting a wait time between batches of restarts.
  #
  # boot:
  #   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
  #   wait: 2

  # Use accessory services (secrets come from .kamal/secrets).
  #
accessories:
  # Use VPNs when using different machines
  db:
    image: postgres:15-alpine
    port: 5432
    roles:
      - web
    env:
      secret:
        - POSTGRES_USER
        - POSTGRES_PASSWORD
        - POSTGRES_DB
        - PGUSER
        - PGDATABASE
    files:
      - ../packages/core/src/database/main/setup/_init.sql:/docker-entrypoint-initdb.d/init.sql
      - ../packages/core/src/database/main/setup/roles.sql:/docker-entrypoint-initdb.d/roles.sql
    directories:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    port: 6379
    roles:
      - web
    cmd: "redis-server --requirepass <%= File.read('.kamal/secrets')[/REDIS_PASSWORD='(.*?)'/, 1]%>"
    directories:
      - redis-data:/data
